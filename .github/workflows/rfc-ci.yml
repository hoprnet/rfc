name: RFC Validation Pipeline
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5

    - name: Validate Markdown Files
      uses: DavidAnson/markdownlint-cli2-action@v20
      with:
        files: "**/*.md"
        config: ".markdownlint.json"

    - name: Validate RFC Repository Structure
      run: |
        echo "🔍 Validating repository structure..."
        for repo in $(find . -maxdepth 1 -type d -name 'RFC-*'); do
          echo "🔍 Validating $repo"
          base=$(basename "$repo")
          expected_file=$(echo "$base" | sed -E 's/^RFC-([0-9]{4})-(.*)/\1-\2.md/')

          if [ ! -f "$repo/$expected_file" ]; then
          echo "❌ Missing main RFC file: $expected_file in $repo"
          echo "   ➔ Expected file path: $repo/$expected_file"
          echo "   ➔ Please ensure the file matches the pattern 'XXXX-rfc-name.md'"
          exit 1
          fi

          echo "✅ Main RFC file found: $expected_file"

          for folder in $(find "$repo" -mindepth 1 -maxdepth 1 -type d); do
          foldername=$(basename "$folder")
          if [[ "$foldername" != "assets" && "$foldername" != "errata" ]]; then
              echo "❌ Invalid folder '$foldername' in $repo. Only 'assets/' and 'errata/' allowed."
              exit 1
          fi
          done

          if [ -d "$repo/errata" ]; then
          echo "🔍 Validating errata folder in $repo..."
          for erratum in "$repo"/errata/*.md; do
              erratum_file=$(basename "$erratum")
              if [[ ! "$erratum_file" =~ ^[0-9]{4}-v[0-9]+\.[0-9]+\.[0-9]+-erratum\.md$ ]]; then
              echo "❌ Invalid erratum file naming: $erratum_file"
              echo "   ➔ Expected pattern: 'XXXX-vX.X.X-erratum.md'"
              exit 1
              fi
          done
          echo "✅ Errata folder validated successfully."
          fi
        done

    - name: Validate Mermaid Diagrams
      run: |
        echo "Validating Mermaid diagrams..."
        grep -r "^\`\`\`mermaid" . || echo "✅ No Mermaid diagrams found or all valid."
